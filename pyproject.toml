[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pydantic-ai-research-email"
version = "1.0.0"
description = "Multi-agent PydanticAI system for research and email automation"
authors = [{name = "Developer", email = "dev@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "pydantic-ai[openai,anthropic]>=0.0.13",
    "pydantic[email]>=2.0.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.25.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "google-auth>=2.15.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.100.0",
    "tavily-python>=0.7.12",
]

[tool.hatch.build.targets.wheel]
packages = ["agents", "cli", "tests"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.scripts]
research-email = "cli.main:app"

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "ISC", "ICN", "T20", "PYI", "PT", "Q", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "NPY", "RUF"]
ignore = ["E501", "N806", "N803"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
]
